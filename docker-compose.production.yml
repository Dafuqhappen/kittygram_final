volumes:
  pg_data_production:
  static_volume:
  media_volume:

services:
  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data_production:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: dafuqhappen/kittygram_backend:latest
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    restart: always
    command: >
      sh -c "python manage.py migrate --no-input && \
          python manage.py collectstatic --no-input && \
          cp -r /app/collected_static/. /app/static_backend && \
          exec gunicorn --bind 0.0.0.0:8000 kittygram_backend.wsgi:application"
    volumes:
      - static_volume:/app/static_backend
      - media_volume:/app/media

  frontend:
    image: dafuqhappen/kittygram_frontend:latest
    env_file: .env
    command: cp -r /app/build/. /
    volumes:
      - static_volume:/static

  gateway:
    image: dafuqhappen/kittygram_gateway:latest
    env_file: .env
    depends_on:
      backend:
        condition: service_started
    volumes:
      - static_volume:/static
      - media_volume:/media
    ports:
      - "9000:80"